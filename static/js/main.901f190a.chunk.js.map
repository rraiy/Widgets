{"version":3,"sources":["components/Dropdown.js","components/Convert.js","components/Translate.js","App.js","index.js"],"names":["Dropdown","label","options","selected","onSelectedChange","useState","openDropdown","setOpenDropdown","formRef","useRef","useEffect","onBodyClick","e","current","contains","target","document","body","addEventListener","capture","removeEventListener","renderOptions","map","option","value","className","onClick","ref","htmlFor","Convert","text","language","translation","setTranslation","debouncedText","setDebouncedText","timerId","setTimeout","clearTimeout","a","axios","post","params","q","key","data","translations","translatedText","translate","Translate","setLanguage","setText","type","onChange","App","setSelected","showDropdown","setShowDropdown","style","width","display","flexDirection","margin","color","ReactDOM","render","getElementById"],"mappings":"2LAsDeA,EApDE,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,MAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,iBAExC,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAUC,mBAEhBC,qBAAU,WACN,IAAMC,EAAc,SAAAC,GACbJ,EAAQK,QAAQC,SAASF,EAAEG,SAG9BR,GAAgB,IAKpB,OAFAS,SAASC,KAAKC,iBAAiB,QAAQP,EAAY,CAACQ,SAAS,IAEtD,WACHH,SAASC,KAAKG,oBAAoB,QAAQT,EAAY,CAACQ,SAAS,OAEtE,IAEF,IAAME,EAAgBnB,EAAQoB,KAAI,SAAAC,GAE9B,OAAIA,EAAOC,QAAUrB,EAASqB,MACnB,KAIP,qBAAKC,UAAU,OAEXC,QAAS,WAAKtB,EAAiBmB,IAFnC,SAGKA,EAAOtB,OAFHsB,EAAOC,UAOxB,OAEI,qBAAKG,IAAKnB,EAASiB,UAAU,UAA7B,SACI,sBAAKA,UAAU,QAAf,UACI,uBAAOG,QAAQ,GAAGH,UAAU,QAA5B,SAAqCxB,IACrC,sBACIyB,QAAS,kBAAInB,GAAiBD,IAC9BmB,UAAS,gCAA2BnB,EAAe,iBAAiB,IAFxE,UAGI,mBAAGmB,UAAU,kBACb,qBAAKA,UAAU,OAAf,SAAuBtB,EAASF,QAChC,qBAAKwB,UAAS,eAAUnB,EAAe,qBAAqB,IAA5D,SAAmEe,aCHxEQ,EAvCC,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAEpB,EAAsC1B,mBAAS,IAA/C,mBAAO2B,EAAP,KAAoBC,EAApB,KACA,EAA0C5B,mBAASyB,GAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KA6BA,OA3BAzB,qBAAU,WACN,IAAM0B,EAAUC,YAAW,WACvBF,EAAiBL,KACnB,KAEF,OAAO,WAAOQ,aAAaF,MAC7B,CAACN,IAEHpB,qBAAU,YACS,uCAAG,8BAAA6B,EAAA,sEACOC,IAAMC,KAAK,2DAA2D,GAAG,CAC1FC,OAAQ,CACJC,EAAET,EACFnB,OAAOgB,EAASP,MAChBoB,IArBR,6CAgBc,gBACPC,EADO,EACPA,KAOPZ,EAAeY,EAAKA,KAAKC,aAAa,GAAGC,gBAR3B,2CAAH,qDAWfC,KAEF,CAACd,EAAeH,IAMd,8BACI,oBAAIN,UAAU,YAAd,SAA2BO,OChCjC9B,EAAU,CACZ,CACID,MAAM,YACNuB,MAAM,MAEV,CACIvB,MAAM,SACNuB,MAAM,MAEV,CACIvB,MAAM,QACNuB,MAAM,OA+BCyB,EA1BG,WACd,MAAgC5C,mBAASH,EAAQ,IAAjD,mBAAO6B,EAAP,KAAiBmB,EAAjB,KACA,EAAwB7C,mBAAS,IAAjC,mBAAOyB,EAAP,KAAaqB,EAAb,KAIA,OACI,gCACI,qBAAK1B,UAAU,UAAf,SACI,sBAAKA,UAAU,QAAf,UACI,uBAAOG,QAAQ,GAAf,wBACA,uBAAOwB,KAAK,OAAO5B,MAAOM,EAAOuB,SAAU,SAAAzC,GAAC,OAAEuC,EAAQvC,EAAEG,OAAOS,eAGvE,cAAC,EAAD,CACIvB,MAAM,oBACNC,QAASA,EACTC,SAAU4B,EACV3B,iBAAkB8C,IAEtB,oBAAIzB,UAAU,YAAd,oBACA,cAAC,EAAD,CAASM,SAAUA,EAAUD,KAAMA,QCvBzC5B,EAAU,CACZ,CACID,MAAM,iBACNuB,MAAM,OAEV,CACIvB,MAAM,mBACNuB,MAAM,SAEV,CACIvB,MAAM,kBACNuB,MAAM,SA8BC8B,EA1BH,WAER,MAAgCjD,mBAASH,EAAQ,IAAjD,mBAAOC,EAAP,KAAiBoD,EAAjB,KACA,EAAwClD,oBAAS,GAAjD,mBAAOmD,EAAP,KAAqBC,EAArB,KAEA,OAEI,sBAAKC,MAAO,CAACC,MAAM,QAASC,QAAQ,OAAQC,cAAc,SAAUC,OAAO,UAA3E,UAGI,wBAAQpC,QAAS,WAAK+B,GAAiBD,IAAvC,iCAEIA,EACA,qCACA,cAAC,EAAD,CAAUvD,MAAM,kBAAkBC,QAASA,EAASC,SAAUA,EAAUC,iBAAkBmD,IAC1F,qBAAKG,MAAO,CAACK,MAAM,GAAD,OAAI5D,EAASqB,QAA/B,yCACA,0BAEC,KAEL,cAAC,EAAD,QC/CZwC,IAASC,OAAO,cAAC,EAAD,IAAQjD,SAASkD,eAAe,W","file":"static/js/main.901f190a.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\n\nconst Dropdown = ({label,options, selected, onSelectedChange}) => {\n\n    const [openDropdown, setOpenDropdown] = useState(false);\n    const formRef = useRef();\n\n    useEffect(() => {\n        const onBodyClick = e => {\n            if(formRef.current.contains(e.target)){\n                return;\n            }\n            setOpenDropdown(false);\n        }\n\n        document.body.addEventListener('click',onBodyClick,{capture: true});\n\n        return () => {\n            document.body.removeEventListener('click',onBodyClick,{capture: true});\n        }\n    },[])\n\n    const renderOptions = options.map(option=>{\n\n        if (option.value === selected.value){ //avoid selected item show on the dropdown list\n            return null;\n        }\n\n        return(\n            <div className=\"item\" \n                key={option.value}\n                onClick={()=>{onSelectedChange(option)}}>\n                {option.label}</div>\n        )\n    })\n\n\n    return (\n        \n        <div ref={formRef} className=\"ui form\">\n            <div className=\"field\">\n                <label htmlFor=\"\" className=\"label\">{label}</label>\n                <div\n                    onClick={()=>setOpenDropdown(!openDropdown)}\n                    className={`ui selection dropdown ${openDropdown ? 'visible active':''}`}>\n                    <i className=\"dropdown icon\"></i>\n                    <div className=\"text\">{selected.label}</div>\n                    <div className={`menu ${openDropdown ? 'visible transition':''}`}>{renderOptions}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dropdown;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst key = \"AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM\";\n\nconst Convert = ({text, language}) => {\n\n    const [translation, setTranslation] = useState('');\n    const [debouncedText, setDebouncedText] = useState(text);\n\n    useEffect(() => {\n        const timerId = setTimeout(()=>{\n            setDebouncedText(text);\n        },500)\n\n        return () => {clearTimeout(timerId)};\n    },[text])\n\n    useEffect(() => {\n        const translate = async () => {\n            const {data} = await axios.post('https://translation.googleapis.com/language/translate/v2',{},{\n                params: {\n                    q:debouncedText,\n                    target:language.value,\n                    key:key\n                }\n            });\n            setTranslation(data.data.translations[0].translatedText);\n        }\n        \n        translate();\n        \n    },[debouncedText, language]);\n\n\n\n\n    return(\n        <div>\n            <h1 className=\"ui header\">{translation}</h1>\n        </div>\n    )\n}\n\nexport default Convert;","import React, {useState, useEffect}from 'react';\nimport Dropdown from './Dropdown';\nimport Convert from './Convert';\n\nconst key = \"AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM\";\n\n\nconst options = [\n    {\n        label:'Afrikaans',\n        value:'af'\n    },\n    {\n        label:'Arabic',\n        value:'ar'\n    },\n    {\n        label:'Hindi',\n        value:'hi'\n    }\n];\n\n\nconst Translate = () => {\n    const [language, setLanguage] = useState(options[0]);\n    const [text, setText] = useState('');\n\n \n\n    return (\n        <div>\n            <div className=\"ui form\">\n                <div className=\"field\">\n                    <label htmlFor=\"\">Enter text</label>\n                    <input type=\"text\" value={text}  onChange={e=>setText(e.target.value)}/>\n                </div>\n            </div>\n            <Dropdown \n                label=\"Select a language\" \n                options={options} \n                selected={language} \n                onSelectedChange={setLanguage}/>\n            \n            <h3 className=\"ui header\">Output</h3>\n            <Convert language={language} text={text} />\n        </div>\n    )\n}\n\nexport default Translate;","import React, {useState, useEffect} from 'react';\nimport Accordion from './components/Accordion';\nimport Search from './components/Search';\nimport Dropdown from './components/Dropdown';\nimport Translate from './components/Translate';\n\nconst items = [\n    {\n        title:'What is React?',\n        content:'React，是一個為資料提供彩現為HTML視圖的開源JavaScript 庫。React視圖通常採用包含以自訂HTML標記規定的其他組件的組件彩現。'\n    },\n    {\n        title:'Why use React?',\n        content:'提供了一種子組件不能直接影響外層組件的模型，資料改變時對HTML文件的有效更新，和現代單頁應用中組件之間乾淨的分離。'\n    },\n    {\n        title:'How to use React?',\n        content:'因為 component 的邏輯是用 JavaScript 寫的而不是使用其他樣板語言，你可以輕鬆的在你的程式中傳遞複雜的資料而不需將其藏在 DOM 之中。'\n    }\n]\n\nconst options = [\n    {\n        label:'The  Color Red',\n        value:'red'\n    },\n    {\n        label:'The  Color Green',\n        value:'green'\n    },\n    {\n        label:'The  Color Blue',\n        value:'blue'\n    }\n]\n\nconst App = () =>{\n\n    const [selected, setSelected] = useState(options[0])\n    const [showDropdown, setShowDropdown] = useState(true)\n    \n    return (\n        \n        <div style={{width:'400px', display:\"flex\", flexDirection:'column', margin:\"0 auto\"}}>\n            {/* <Accordion items={items}></Accordion> */}\n            {/* <Search></Search> */}\n            <button onClick={()=>{setShowDropdown(!showDropdown)}}>show/close Dropdown</button>\n            {\n                showDropdown?\n                <>\n                <Dropdown label=\"Select a color.\" options={options} selected={selected} onSelectedChange={setSelected}/>\n                <div style={{color:`${selected.value}`}}>The text will change color.</div>\n                <br />\n                </>\n                :null\n            }\n            <Translate/>  \n        </div>\n    )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nif(module.hot){\n    module.hot.accept();\n}\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}